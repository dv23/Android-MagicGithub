package com.openclassrooms.magicgithub.api;

import com.openclassrooms.magicgithub.model.User;

import java.util.Collections;
import java.util.List;

import static com.openclassrooms.magicgithub.api.FakeApiServiceGenerator.FAKE_USERS;
import static com.openclassrooms.magicgithub.api.FakeApiServiceGenerator.FAKE_USERS_RANDOM;
import static com.openclassrooms.magicgithub.api.FakeApiServiceGenerator.generateUsers;

public class FakeApiService implements ApiService {

private List<User> users = generateUsers();

    /**
     * Return a list of {@link User}
     * Those users must be generated by {@link FakeApiServiceGenerator}
     * @return liste de users commmuns FAKE_USERS
     */
    @Override
    public List<User> getUsers() {
        //System.out.println("getUsers FakeApiService" + users.toString());
        return users;
    }

    /**
     * Generate a random {@link User} and add it {@link FakeApiService#users} list.
     * This user must be get from the {@link FakeApiServiceGenerator#FAKE_USERS_RANDOM} list.
     */
    @Override
    public void generateRandomUser() {
        users.add(User.random());
        /** Shuffle the user list
        //Collections.shuffle(FAKE_USERS_RANDOM);
        //users.add(FAKE_USERS_RANDOM.get(0));
        */
        }

    /**
     * Delete a {@link User} from the {@link FakeApiService#users} list.
     */
    @Override
    public void deleteUser(User user) {
        //System.out.println("FakeAPI deleteUser user remove :" +user.getLogin());
        users.remove(user);
        //System.out.println("FakeAPI deleteUser size users after remove :" +users.size());
    }

    /**
     * Récupération du dernier profil
     * @return le dernier objet de la ocllection de profils, donc le plus récent
     */
     public User getLastProfil() {
        return users.get(users.size()-1);
    }

}
